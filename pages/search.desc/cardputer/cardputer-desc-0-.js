searchState.loadedDescShard("cardputer", 0, "Utilities for M5Stack Cardputer\nCardputer adv specific implementations\nLCD backlight controller\nCreate and initialize ST7789 display driver\nInitialize I2C driver for Grove I/F\nKeyboard scanner that converts the 74HC138 decoding results\nkeyboard module Keyboard scanner that converts the …\nA specific key combined with modifier keys such as Ctrl, …\nA structure for capturing key events and tracking state …\nTCA8418RTWR Driver\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBacklight controller\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreate new controller.\nTurn off the backlight.\nTurn on the backlight.\nDisplay height\nDisplay width\nCreate and initialize display driver\nConversion rule\nDefine the type of key as modifier key and normal key\nKeyboard scanner for Cardputer\nKeyboard scanner trait\nStructure that scans the keyboard and keeps track of state …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the imprint of the key assigned to the rule\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert according to the state of Fn and Shift key\nCreate new scanner.\nScan the keyboard and return the Vector of KeyImprint.\nGet the latest key state and update the Pressed/Released …")